# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/121e8353-c83d-4521-a5d2-8c1e9b33ae6a";
      fsType = "btrfs";
      options = [ "subvol=@" ];
    };

  # Unlock boot nvme drive
  boot.initrd.luks.devices."luks-86240298-42ca-4a32-a95a-455e417afab1".device = "/dev/disk/by-uuid/86240298-42ca-4a32-a95a-455e417afab1";


  # Unlock second nvme drive
  boot.initrd.luks.devices."luks-5d3dd232-e2a6-4589-b508-aa4e791b5517".device = "/dev/disk/by-uuid/5d3dd232-e2a6-4589-b508-aa4e791b5517";

  # Mount second nvme drive
  fileSystems."/mnt/ssd" =
    { device = "/dev/disk/by-uuid/6f771f8f-3821-4b24-8f59-80df9c61efe8";
      fsType = "btrfs";
      options = [ "acl" "autodefrag" "defaults" "nofail" "nossd" "compress=zstd:5" "noatime" ];
    };

  # Fido 2 disk unlocking.
  # boot.initrd.luks.fido2Support = true;
  # boot.initrd.luks.devices.luks-86240298-42ca-4a32-a95a-455e417afab1.crypttabExtraOpts = ["fido2-device=auto"];
  # boot.initrd.luks.devices."luks-86240298-42ca-4a32-a95a-455e417afab1".fido2.credential = "";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/551E-AC0C";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/85482657-58e8-437f-97fd-e5753837910d"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
